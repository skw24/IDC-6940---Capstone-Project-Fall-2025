{
  "hash": "7b5e4a131c6bc08417d86332ed2bb672",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Reproducing Steve's Code - Stroke_results_1019_2025_latest\"\ndescription: \"Trying to replicate the Stroke_results_1019_2025_latest\"\nauthor:\n  - name: Renan Monteiro Barbosa\n    url: https://github.com/renanmb\n    affiliation: Master of Data Science Program @ The University of West Florida (UWF)\n    # affiliation-url: https://ucsb-meds.github.io/\n# date: 10-24-2022\ncategories: [coding, week 8, renan]\n# citation:\n#   url: https://samanthacsik.github.io/posts/2022-10-24-my-blog-post/\nimage: images/spongebob-imagination.jpg\ndraft: false\nbibliography: references.bib\nlink-citations: true\n---\n\nOn this document I try to replicate Steve code: **Stroke_Results_1019_2025_latest_440PM_SW_For_Group.R**\n\n\n\n## 1. Setup and Data Loading\n\nFirst we need to install all packages, system dependencies and solve conflicts to produce a new renv.lock file.\n\n### 1.1 Load Libraries\n\nInstall packages if necessary:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Run this once to install all the necessary packages\n# install.packages(\"dplyr\")\n# install.packages(\"car\")\n# install.packages(\"ResourceSelection\")\n# install.packages(\"caret\")\n# install.packages(\"rcompanion\")\n# install.packages(\"pROC\")\n# install.packages(\"cvAUC\")\n```\n:::\n\n\nLoad Libraries:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# For data manipulation and visualization\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(corrplot)\nlibrary(knitr)\nlibrary(ggpubr)\n\n# For data preprocessing and modeling\nlibrary(mice)\nlibrary(ROSE) # For SMOTE\nlibrary(ranger) # A fast implementation of random forests\n\n# For stacking/ensemble models\nlibrary(stacks)\nlibrary(tidymodels)\n\nlibrary(themis)\nlibrary(gghighlight)\n\nlibrary(pscl)\nlibrary(dplyr)\nlibrary(car)\nlibrary(ResourceSelection)\nlibrary(caret)\nlibrary(rcompanion)\nlibrary(Hmisc)\nlibrary(pROC)\nlibrary(cvAUC)\n\n# Set seed for reproducibility\nset.seed(123)\n```\n:::\n\n\n#### 1.1.1 Possible Issues and conflicts to resolve\n\n```{{bash}}\n\n```\n\n\n### 1.2 Load Data\n\nWill be using my original Dataset as well Steve's Dataset and compare for differences.\n\n- **Renan**: kaggle_data1\n- **Steve**: stroke1\n\n#### 1.2.1 Renan Dataset\n\nBelow will be loading the healthcare-dataset-stroke-data.csv and performing necessary changes to the dataset and loading into the DataFrame: kaggle_data1\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nfind_git_root <- function(start = getwd()) {\n  path <- normalizePath(start, winslash = \"/\", mustWork = TRUE)\n  while (path != dirname(path)) {\n    if (dir.exists(file.path(path, \".git\"))) return(path)\n    path <- dirname(path)\n  }\n  stop(\"No .git directory found â€” are you inside a Git repository?\")\n}\n\nrepo_root <- find_git_root()\ndatasets_path <- file.path(repo_root, \"datasets\")\nkaggle_dataset_path <- file.path(datasets_path, \"kaggle-healthcare-dataset-stroke-data/healthcare-dataset-stroke-data.csv\")\nkaggle_data1 = read_csv(kaggle_dataset_path, show_col_types = FALSE)\n\n# unique(kaggle_data1$bmi)\nkaggle_data1 <- kaggle_data1 %>%\n  mutate(bmi = na_if(bmi, \"N/A\")) %>%   # Convert \"N/A\" string to NA\n  mutate(bmi = as.numeric(bmi))         # Convert from character to numeric\n\n# Remove the 'Other' gender row and the 'id' column\nkaggle_data1 <- kaggle_data1 %>%\n  filter(gender != \"Other\") %>%\n  select(-id) %>%\n  mutate_if(is.character, as.factor) # Convert character columns to factors for easier modeling\n```\n:::\n\n\n#### 1.2.1 Steve Dataset\n\nBelow will be loading the stroke.csv and performing necessary changes to the dataset and loading into the DataFrame: stroke1\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Reading the datafile in (the same one you got for us Renan)#\nsteve_dataset_path <- file.path(datasets_path, \"steve/stroke.csv\")\nstroke1 = read_csv(steve_dataset_path, show_col_types = FALSE)\n```\n:::\n\n\n### 1.3 Prepare Dataset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(stroke1)\nnrow(stroke1)\nsummary(stroke1)\ncount_tables <- lapply(stroke1, table)\ncount_tables\n```\n:::\n\n\nPart 1:  preparing the data\n\n- **Smoking Status** - remove unknown\n- **bmi** - remove N/A\n- **Work type** - remove children\n- **age** - create numerical variable with 2 places after the decimal\n- **gender** - remove other\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstroke1[stroke1 == \"N/A\"] <- NA\nstroke1[stroke1 == \"Unknown\"] <- NA\nstroke1[stroke1 == \"children\"] <- NA\nstroke1[stroke1 == \"other\"] <- NA\n\nstroke1$bmi <- round(as.numeric(stroke1$bmi), 2)\n\nstroke1$gender[stroke1$gender == \"Male\"] <- 1\nstroke1$gender[stroke1$gender == \"Female\"] <- 2\nstroke1$gender <- as.numeric(stroke1$gender)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\nstroke1$ever_married[stroke1$ever_married == \"Yes\"] <- 1\nstroke1$ever_married[stroke1$ever_married == \"No\"] <- 2\nstroke1$ever_married <- as.numeric(stroke1$ever_married)\n\nstroke1$work_type[stroke1$work_type == \"Govt_job\"] <- 1\nstroke1$work_type[stroke1$work_type == \"Private\"] <- 2\nstroke1$work_type[stroke1$work_type == \"Self-employed\"] <- 3\nstroke1$work_type[stroke1$work_type == \"Never_worked\"] <- 4\nstroke1$work_type <- as.numeric(stroke1$work_type)\n\nstroke1$Residence_type[stroke1$Residence_type == \"Urban\"] <- 1\nstroke1$Residence_type[stroke1$Residence_type == \"Rural\"] <- 2\nstroke1$Residence_type <- as.numeric(stroke1$Residence_type)\n\nstroke1$avg_glucose_level <- as.numeric(stroke1$avg_glucose_level)\n\nstroke1$heart_disease <- as.numeric(stroke1$heart_disease)\n\nstroke1$hypertension <- as.numeric(stroke1$hypertension)\n\nstroke1$age <- round(as.numeric(stroke1$age), 2)\n\nstroke1$stroke <- as.numeric(stroke1$stroke)\n\nstroke1$smoking_status[stroke1$smoking_status == \"never smoked\"] <- 1\nstroke1$smoking_status[stroke1$smoking_status == \"formerly smoked\"] <- 2\nstroke1$smoking_status[stroke1$smoking_status == \"smokes\"] <- 3\nstroke1$smoking_status <- as.numeric(stroke1$smoking_status)\n\nstroke1 <- stroke1[, !(names(stroke1) %in% \"id\")]\nstroke1_clean <- na.omit(stroke1)\n```\n:::\n\n\n\nconverted all columns to numeric and removed id\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# converted all columns to numeric and removed id\nstr(stroke1_clean)\nnrow(stroke1_clean)\nLR_stroke1 <- stroke1_clean\nstr(LR_stroke1)\ncount_tables <- lapply(LR_stroke1, table)\ncount_tables\n```\n:::\n\n\n## 2. Apply Logistic Regression\n\nPart 2:Create and Run the Logistic Regression model from the  dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Part 2:Create and Run the Logistic Regression model from the  dataset\nmodel <- glm(stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi + smoking_status, data=LR_stroke1, family = binomial)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = stroke ~ gender + age + hypertension + heart_disease + \n    ever_married + work_type + Residence_type + avg_glucose_level + \n    bmi + smoking_status, family = binomial, data = LR_stroke1)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       -8.426854   0.873243  -9.650  < 2e-16 ***\ngender             0.080370   0.167274   0.480 0.630893    \nage                0.070967   0.006845  10.368  < 2e-16 ***\nhypertension       0.570797   0.182580   3.126 0.001770 ** \nheart_disease      0.417884   0.220311   1.897 0.057856 .  \never_married       0.174316   0.261832   0.666 0.505569    \nwork_type         -0.109615   0.126101  -0.869 0.384703    \nResidence_type     0.005932   0.162188   0.037 0.970822    \navg_glucose_level  0.004658   0.001375   3.388 0.000704 ***\nbmi                0.006275   0.012875   0.487 0.625954    \nsmoking_status     0.179921   0.106431   1.691 0.090932 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1403.5  on 3356  degrees of freedom\nResidual deviance: 1145.4  on 3346  degrees of freedom\nAIC: 1167.4\n\nNumber of Fisher Scoring iterations: 7\n```\n\n\n:::\n:::\n\n\n\n## 3. Testing logistic Regression Model Assumptions\n\nPart 3: Testing logistic Regression Model Assumptions\n\nThere are several assumptions for Logistic Regression. They are:\n\n1. The Dependent Variable is binary (i.e, 0 or 1)\n2. There is a linear relationship between th logit of the outcome and each predictor\n3. There are NO high leverage outliers in the predictors\n4. There is No high multicollinearity (ie strong correlations) between predictors\n\nNow to test each assumption\n\n### 3.1 Testing Assumption 1\n\nTesting Assumption 1: The Dependent Variable is binary (0 or 1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(LR_stroke1$stroke)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 0\n```\n\n\n:::\n:::\n\n\n### 3.2 Testing Assumption 2\n\nTesting Assumption 2: There is a linear relationship between the outcome variable and each predictor\n\nfirst,  adjust all predictors so all values are positive\n\nConclusion: For all continuous variables , **ageadj**, **avg_glucose_leveladj**, and **bmiadj**, the residual plots show linearity\n\nConclusion: all the other predictors are categorical, with the magenta line flat, and the values clustering around certain values, they are also appropriate for logistic regression\n\nConclusion for assumption 2 - Linearity is met\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLR_stroke1$genderadj <- LR_stroke1$gender + abs(min(LR_stroke1$gender)) + 1\n\nLR_stroke1$ageadj <- LR_stroke1$age + abs(min(LR_stroke1$age)) + 1\n\nLR_stroke1$hypertensionadj <- LR_stroke1$hypertension + abs(min(LR_stroke1$hypertension)) + 1\n\nLR_stroke1$heart_diseaseadj <- LR_stroke1$heart_disease + abs(min(LR_stroke1$hypertension)) + 1\n\nLR_stroke1$ever_marriedadj <- LR_stroke1$ever_married + abs(min(LR_stroke1$ever_married)) + 1\n\nLR_stroke1$work_typeadj <- LR_stroke1$work_type + abs(min(LR_stroke1$work_type)) + 1\n\nLR_stroke1$Residence_typeadj <- LR_stroke1$Residence_type + abs(min(LR_stroke1$Residence_type)) + 1\n\nLR_stroke1$avg_glucose_leveladj <- LR_stroke1$avg_glucose_level + abs(min(LR_stroke1$avg_glucose_level)) + 1\n\nLR_stroke1$bmiadj <- LR_stroke1$bmi + abs(min(LR_stroke1$bmi)) + 1\n\nLR_stroke1$smoking_statusadj <- LR_stroke1$smoking_status + abs(min(LR_stroke1$smoking_status)) + 1\n\nstr(LR_stroke1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [3,357 Ã— 21] (S3: tbl_df/tbl/data.frame)\n $ gender              : num [1:3357] 1 1 2 2 1 1 2 2 2 2 ...\n $ age                 : num [1:3357] 67 80 49 79 81 74 69 81 61 54 ...\n $ hypertension        : num [1:3357] 0 0 0 1 0 1 0 1 0 0 ...\n $ heart_disease       : num [1:3357] 1 1 0 0 0 1 0 0 1 0 ...\n $ ever_married        : num [1:3357] 1 1 1 1 1 1 2 1 1 1 ...\n $ work_type           : num [1:3357] 2 2 2 3 2 2 2 2 1 2 ...\n $ Residence_type      : num [1:3357] 1 2 1 2 1 2 1 2 2 1 ...\n $ avg_glucose_level   : num [1:3357] 229 106 171 174 186 ...\n $ bmi                 : num [1:3357] 36.6 32.5 34.4 24 29 27.4 22.8 29.7 36.8 27.3 ...\n $ smoking_status      : num [1:3357] 2 1 3 1 2 1 1 1 3 3 ...\n $ stroke              : num [1:3357] 1 1 1 1 1 1 1 1 1 1 ...\n $ genderadj           : num [1:3357] 3 3 4 4 3 3 4 4 4 4 ...\n $ ageadj              : num [1:3357] 81 94 63 93 95 88 83 95 75 68 ...\n $ hypertensionadj     : num [1:3357] 1 1 1 2 1 2 1 2 1 1 ...\n $ heart_diseaseadj    : num [1:3357] 2 2 1 1 1 2 1 1 2 1 ...\n $ ever_marriedadj     : num [1:3357] 3 3 3 3 3 3 4 3 3 3 ...\n $ work_typeadj        : num [1:3357] 4 4 4 5 4 4 4 4 3 4 ...\n $ Residence_typeadj   : num [1:3357] 3 4 3 4 3 4 3 4 4 3 ...\n $ avg_glucose_leveladj: num [1:3357] 285 162 227 230 242 ...\n $ bmiadj              : num [1:3357] 49.1 45 46.9 36.5 41.5 39.9 35.3 42.2 49.3 39.8 ...\n $ smoking_statusadj   : num [1:3357] 4 3 5 3 4 3 3 3 5 5 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:1753] 2 9 10 14 20 24 28 30 32 39 ...\n  ..- attr(*, \"names\")= chr [1:1753] \"2\" \"9\" \"10\" \"14\" ...\n```\n\n\n:::\n\n```{.r .cell-code}\nStrokeAdj <- LR_stroke1\n\nStrokeAdj <- StrokeAdj[ , !(names(StrokeAdj) %in% c(\"gender\", \"age\", \"hypertension\", \"heart_disease\", \"ever_married\", \"work_type\", \"Residence_type\", \"avg_glucose_level\", \"bmi\", \"smoking_status\")) ]\n```\n:::\n\n\nFit the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod.2 <- glm(stroke ~ genderadj + ageadj + hypertensionadj + heart_diseaseadj + ever_marriedadj + work_typeadj + Residence_typeadj + avg_glucose_leveladj + bmiadj + smoking_statusadj, data=StrokeAdj, family=binomial)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot Residuals\nresidualPlots(mod.2)\n```\n\n::: {.cell-output-display}\n![](Stroke_Results_10182025_SW_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Stroke_Results_10182025_SW_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     Test stat Pr(>|Test stat|)  \ngenderadj               0.0000          1.00000  \nageadj                  2.0626          0.15095  \nhypertensionadj         0.0000          1.00000  \nheart_diseaseadj        0.0000          1.00000  \never_marriedadj         0.0000          1.00000  \nwork_typeadj            3.1406          0.07636 .\nResidence_typeadj       0.0000          1.00000  \navg_glucose_leveladj    0.0103          0.91921  \nbmiadj                  0.3947          0.52983  \nsmoking_statusadj       0.4775          0.48953  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n### 3.3 Testing Assumption 3\n\nTesting Assumption 3: assess influential outliers using car package and influencePlot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Where the Object Stroke.2 comes from\n# alias(Stroke.2)\nalias(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModel :\nstroke ~ gender + age + hypertension + heart_disease + ever_married + \n    work_type + Residence_type + avg_glucose_level + bmi + smoking_status\n```\n\n\n:::\n:::\n\n\n::: {.callout-Note}\n## Error - Object not found\n\nError: object 'Stroke.2' not found. Where is it coming from ??\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"Hmisc\")\n# library(Hmisc)\nrcorr(as.matrix(LR_stroke1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     gender   age hypertension heart_disease ever_married\ngender                 1.00 -0.06        -0.04         -0.10         0.03\nage                   -0.06  1.00         0.26          0.26        -0.49\nhypertension          -0.04  0.26         1.00          0.11        -0.11\nheart_disease         -0.10  0.26         0.11          1.00        -0.07\never_married           0.03 -0.49        -0.11         -0.07         1.00\nwork_type              0.01  0.14         0.05          0.03        -0.02\nResidence_type        -0.01 -0.02         0.00         -0.01         0.01\navg_glucose_level     -0.07  0.24         0.17          0.14        -0.12\nbmi                   -0.02  0.04         0.13          0.00        -0.13\nsmoking_status        -0.08  0.03        -0.01          0.06        -0.06\nstroke                -0.01  0.24         0.14          0.14        -0.07\ngenderadj              1.00 -0.06        -0.04         -0.10         0.03\nageadj                -0.06  1.00         0.26          0.26        -0.49\nhypertensionadj       -0.04  0.26         1.00          0.11        -0.11\nheart_diseaseadj      -0.10  0.26         0.11          1.00        -0.07\never_marriedadj        0.03 -0.49        -0.11         -0.07         1.00\nwork_typeadj           0.01  0.14         0.05          0.03        -0.02\nResidence_typeadj     -0.01 -0.02         0.00         -0.01         0.01\navg_glucose_leveladj  -0.07  0.24         0.17          0.14        -0.12\nbmiadj                -0.02  0.04         0.13          0.00        -0.13\nsmoking_statusadj     -0.08  0.03        -0.01          0.06        -0.06\n                     work_type Residence_type avg_glucose_level   bmi\ngender                    0.01          -0.01             -0.07 -0.02\nage                       0.14          -0.02              0.24  0.04\nhypertension              0.05           0.00              0.17  0.13\nheart_disease             0.03          -0.01              0.14  0.00\never_married             -0.02           0.01             -0.12 -0.13\nwork_type                 1.00          -0.01              0.03 -0.02\nResidence_type           -0.01           1.00              0.01  0.01\navg_glucose_level         0.03           0.01              1.00  0.16\nbmi                      -0.02           0.01              0.16  1.00\nsmoking_status           -0.02          -0.04              0.01  0.03\nstroke                    0.04          -0.01              0.14  0.01\ngenderadj                 0.01          -0.01             -0.07 -0.02\nageadj                    0.14          -0.02              0.24  0.04\nhypertensionadj           0.05           0.00              0.17  0.13\nheart_diseaseadj          0.03          -0.01              0.14  0.00\never_marriedadj          -0.02           0.01             -0.12 -0.13\nwork_typeadj              1.00          -0.01              0.03 -0.02\nResidence_typeadj        -0.01           1.00              0.01  0.01\navg_glucose_leveladj      0.03           0.01              1.00  0.16\nbmiadj                   -0.02           0.01              0.16  1.00\nsmoking_statusadj        -0.02          -0.04              0.01  0.03\n                     smoking_status stroke genderadj ageadj hypertensionadj\ngender                        -0.08  -0.01      1.00  -0.06           -0.04\nage                            0.03   0.24     -0.06   1.00            0.26\nhypertension                  -0.01   0.14     -0.04   0.26            1.00\nheart_disease                  0.06   0.14     -0.10   0.26            0.11\never_married                  -0.06  -0.07      0.03  -0.49           -0.11\nwork_type                     -0.02   0.04      0.01   0.14            0.05\nResidence_type                -0.04  -0.01     -0.01  -0.02            0.00\navg_glucose_level              0.01   0.14     -0.07   0.24            0.17\nbmi                            0.03   0.01     -0.02   0.04            0.13\nsmoking_status                 1.00   0.02     -0.08   0.03           -0.01\nstroke                         0.02   1.00     -0.01   0.24            0.14\ngenderadj                     -0.08  -0.01      1.00  -0.06           -0.04\nageadj                         0.03   0.24     -0.06   1.00            0.26\nhypertensionadj               -0.01   0.14     -0.04   0.26            1.00\nheart_diseaseadj               0.06   0.14     -0.10   0.26            0.11\never_marriedadj               -0.06  -0.07      0.03  -0.49           -0.11\nwork_typeadj                  -0.02   0.04      0.01   0.14            0.05\nResidence_typeadj             -0.04  -0.01     -0.01  -0.02            0.00\navg_glucose_leveladj           0.01   0.14     -0.07   0.24            0.17\nbmiadj                         0.03   0.01     -0.02   0.04            0.13\nsmoking_statusadj              1.00   0.02     -0.08   0.03           -0.01\n                     heart_diseaseadj ever_marriedadj work_typeadj\ngender                          -0.10            0.03         0.01\nage                              0.26           -0.49         0.14\nhypertension                     0.11           -0.11         0.05\nheart_disease                    1.00           -0.07         0.03\never_married                    -0.07            1.00        -0.02\nwork_type                        0.03           -0.02         1.00\nResidence_type                  -0.01            0.01        -0.01\navg_glucose_level                0.14           -0.12         0.03\nbmi                              0.00           -0.13        -0.02\nsmoking_status                   0.06           -0.06        -0.02\nstroke                           0.14           -0.07         0.04\ngenderadj                       -0.10            0.03         0.01\nageadj                           0.26           -0.49         0.14\nhypertensionadj                  0.11           -0.11         0.05\nheart_diseaseadj                 1.00           -0.07         0.03\never_marriedadj                 -0.07            1.00        -0.02\nwork_typeadj                     0.03           -0.02         1.00\nResidence_typeadj               -0.01            0.01        -0.01\navg_glucose_leveladj             0.14           -0.12         0.03\nbmiadj                           0.00           -0.13        -0.02\nsmoking_statusadj                0.06           -0.06        -0.02\n                     Residence_typeadj avg_glucose_leveladj bmiadj\ngender                           -0.01                -0.07  -0.02\nage                              -0.02                 0.24   0.04\nhypertension                      0.00                 0.17   0.13\nheart_disease                    -0.01                 0.14   0.00\never_married                      0.01                -0.12  -0.13\nwork_type                        -0.01                 0.03  -0.02\nResidence_type                    1.00                 0.01   0.01\navg_glucose_level                 0.01                 1.00   0.16\nbmi                               0.01                 0.16   1.00\nsmoking_status                   -0.04                 0.01   0.03\nstroke                           -0.01                 0.14   0.01\ngenderadj                        -0.01                -0.07  -0.02\nageadj                           -0.02                 0.24   0.04\nhypertensionadj                   0.00                 0.17   0.13\nheart_diseaseadj                 -0.01                 0.14   0.00\never_marriedadj                   0.01                -0.12  -0.13\nwork_typeadj                     -0.01                 0.03  -0.02\nResidence_typeadj                 1.00                 0.01   0.01\navg_glucose_leveladj              0.01                 1.00   0.16\nbmiadj                            0.01                 0.16   1.00\nsmoking_statusadj                -0.04                 0.01   0.03\n                     smoking_statusadj\ngender                           -0.08\nage                               0.03\nhypertension                     -0.01\nheart_disease                     0.06\never_married                     -0.06\nwork_type                        -0.02\nResidence_type                   -0.04\navg_glucose_level                 0.01\nbmi                               0.03\nsmoking_status                    1.00\nstroke                            0.02\ngenderadj                        -0.08\nageadj                            0.03\nhypertensionadj                  -0.01\nheart_diseaseadj                  0.06\never_marriedadj                  -0.06\nwork_typeadj                     -0.02\nResidence_typeadj                -0.04\navg_glucose_leveladj              0.01\nbmiadj                            0.03\nsmoking_statusadj                 1.00\n\nn= 3357 \n\n\nP\n                     gender age    hypertension heart_disease ever_married\ngender                      0.0012 0.0204       0.0000        0.1140      \nage                  0.0012        0.0000       0.0000        0.0000      \nhypertension         0.0204 0.0000              0.0000        0.0000      \nheart_disease        0.0000 0.0000 0.0000                     0.0000      \never_married         0.1140 0.0000 0.0000       0.0000                    \nwork_type            0.3863 0.0000 0.0051       0.0862        0.2313      \nResidence_type       0.5077 0.3076 0.8569       0.5527        0.5150      \navg_glucose_level    0.0000 0.0000 0.0000       0.0000        0.0000      \nbmi                  0.2487 0.0144 0.0000       0.8185        0.0000      \nsmoking_status       0.0000 0.0448 0.7537       0.0005        0.0009      \nstroke               0.4296 0.0000 0.0000       0.0000        0.0002      \ngenderadj            0.0000 0.0012 0.0204       0.0000        0.1140      \nageadj               0.0012 0.0000 0.0000       0.0000        0.0000      \nhypertensionadj      0.0204 0.0000 0.0000       0.0000        0.0000      \nheart_diseaseadj     0.0000 0.0000 0.0000       0.0000        0.0000      \never_marriedadj      0.1140 0.0000 0.0000       0.0000        0.0000      \nwork_typeadj         0.3863 0.0000 0.0051       0.0862        0.2313      \nResidence_typeadj    0.5077 0.3076 0.8569       0.5527        0.5150      \navg_glucose_leveladj 0.0000 0.0000 0.0000       0.0000        0.0000      \nbmiadj               0.2487 0.0144 0.0000       0.8185        0.0000      \nsmoking_statusadj    0.0000 0.0448 0.7537       0.0005        0.0009      \n                     work_type Residence_type avg_glucose_level bmi   \ngender               0.3863    0.5077         0.0000            0.2487\nage                  0.0000    0.3076         0.0000            0.0144\nhypertension         0.0051    0.8569         0.0000            0.0000\nheart_disease        0.0862    0.5527         0.0000            0.8185\never_married         0.2313    0.5150         0.0000            0.0000\nwork_type                      0.6768         0.0467            0.3243\nResidence_type       0.6768                   0.6427            0.5689\navg_glucose_level    0.0467    0.6427                           0.0000\nbmi                  0.3243    0.5689         0.0000                  \nsmoking_status       0.3764    0.0208         0.7679            0.0925\nstroke               0.0259    0.7171         0.0000            0.6866\ngenderadj            0.3863    0.5077         0.0000            0.2487\nageadj               0.0000    0.3076         0.0000            0.0144\nhypertensionadj      0.0051    0.8569         0.0000            0.0000\nheart_diseaseadj     0.0862    0.5527         0.0000            0.8185\never_marriedadj      0.2313    0.5150         0.0000            0.0000\nwork_typeadj         0.0000    0.6768         0.0467            0.3243\nResidence_typeadj    0.6768    0.0000         0.6427            0.5689\navg_glucose_leveladj 0.0467    0.6427         0.0000            0.0000\nbmiadj               0.3243    0.5689         0.0000            0.0000\nsmoking_statusadj    0.3764    0.0208         0.7679            0.0925\n                     smoking_status stroke genderadj ageadj hypertensionadj\ngender               0.0000         0.4296 0.0000    0.0012 0.0204         \nage                  0.0448         0.0000 0.0012    0.0000 0.0000         \nhypertension         0.7537         0.0000 0.0204    0.0000 0.0000         \nheart_disease        0.0005         0.0000 0.0000    0.0000 0.0000         \never_married         0.0009         0.0002 0.1140    0.0000 0.0000         \nwork_type            0.3764         0.0259 0.3863    0.0000 0.0051         \nResidence_type       0.0208         0.7171 0.5077    0.3076 0.8569         \navg_glucose_level    0.7679         0.0000 0.0000    0.0000 0.0000         \nbmi                  0.0925         0.6866 0.2487    0.0144 0.0000         \nsmoking_status                      0.2559 0.0000    0.0448 0.7537         \nstroke               0.2559                0.4296    0.0000 0.0000         \ngenderadj            0.0000         0.4296           0.0012 0.0204         \nageadj               0.0448         0.0000 0.0012           0.0000         \nhypertensionadj      0.7537         0.0000 0.0204    0.0000                \nheart_diseaseadj     0.0005         0.0000 0.0000    0.0000 0.0000         \never_marriedadj      0.0009         0.0002 0.1140    0.0000 0.0000         \nwork_typeadj         0.3764         0.0259 0.3863    0.0000 0.0051         \nResidence_typeadj    0.0208         0.7171 0.5077    0.3076 0.8569         \navg_glucose_leveladj 0.7679         0.0000 0.0000    0.0000 0.0000         \nbmiadj               0.0925         0.6866 0.2487    0.0144 0.0000         \nsmoking_statusadj    0.0000         0.2559 0.0000    0.0448 0.7537         \n                     heart_diseaseadj ever_marriedadj work_typeadj\ngender               0.0000           0.1140          0.3863      \nage                  0.0000           0.0000          0.0000      \nhypertension         0.0000           0.0000          0.0051      \nheart_disease        0.0000           0.0000          0.0862      \never_married         0.0000           0.0000          0.2313      \nwork_type            0.0862           0.2313          0.0000      \nResidence_type       0.5527           0.5150          0.6768      \navg_glucose_level    0.0000           0.0000          0.0467      \nbmi                  0.8185           0.0000          0.3243      \nsmoking_status       0.0005           0.0009          0.3764      \nstroke               0.0000           0.0002          0.0259      \ngenderadj            0.0000           0.1140          0.3863      \nageadj               0.0000           0.0000          0.0000      \nhypertensionadj      0.0000           0.0000          0.0051      \nheart_diseaseadj                      0.0000          0.0862      \never_marriedadj      0.0000                           0.2313      \nwork_typeadj         0.0862           0.2313                      \nResidence_typeadj    0.5527           0.5150          0.6768      \navg_glucose_leveladj 0.0000           0.0000          0.0467      \nbmiadj               0.8185           0.0000          0.3243      \nsmoking_statusadj    0.0005           0.0009          0.3764      \n                     Residence_typeadj avg_glucose_leveladj bmiadj\ngender               0.5077            0.0000               0.2487\nage                  0.3076            0.0000               0.0144\nhypertension         0.8569            0.0000               0.0000\nheart_disease        0.5527            0.0000               0.8185\never_married         0.5150            0.0000               0.0000\nwork_type            0.6768            0.0467               0.3243\nResidence_type       0.0000            0.6427               0.5689\navg_glucose_level    0.6427            0.0000               0.0000\nbmi                  0.5689            0.0000               0.0000\nsmoking_status       0.0208            0.7679               0.0925\nstroke               0.7171            0.0000               0.6866\ngenderadj            0.5077            0.0000               0.2487\nageadj               0.3076            0.0000               0.0144\nhypertensionadj      0.8569            0.0000               0.0000\nheart_diseaseadj     0.5527            0.0000               0.8185\never_marriedadj      0.5150            0.0000               0.0000\nwork_typeadj         0.6768            0.0467               0.3243\nResidence_typeadj                      0.6427               0.5689\navg_glucose_leveladj 0.6427                                 0.0000\nbmiadj               0.5689            0.0000                     \nsmoking_statusadj    0.0208            0.7679               0.0925\n                     smoking_statusadj\ngender               0.0000           \nage                  0.0448           \nhypertension         0.7537           \nheart_disease        0.0005           \never_married         0.0009           \nwork_type            0.3764           \nResidence_type       0.0208           \navg_glucose_level    0.7679           \nbmi                  0.0925           \nsmoking_status       0.0000           \nstroke               0.2559           \ngenderadj            0.0000           \nageadj               0.0448           \nhypertensionadj      0.7537           \nheart_diseaseadj     0.0005           \never_marriedadj      0.0009           \nwork_typeadj         0.3764           \nResidence_typeadj    0.0208           \navg_glucose_leveladj 0.7679           \nbmiadj               0.0925           \nsmoking_statusadj                     \n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"car\")\n# library(car)\ninfluencePlot(model)\n```\n\n::: {.cell-output-display}\n![](Stroke_Results_10182025_SW_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        StudRes          Hat       CookD\n83    2.6917353 0.0039267816 0.012237368\n84    1.5018344 0.0343771041 0.006641860\n87    3.0732709 0.0012042796 0.011476828\n131   3.1608870 0.0006013465 0.007697762\n152   3.1135601 0.0005613972 0.006237531\n2583 -0.8509399 0.0399302730 0.001668526\n```\n\n\n:::\n:::\n\n\nCooks D ranges from 0 to .0122 \n\nWhile the ideal size is 4/N (4/3357 = 0.012), its far outside the danger zone of .5\n\nConclusion: Assumption 3 is met - No substantial outliers\n\n### 3.4 Testing Assumption 4\n\nTesting Assumption 4 : Multicollinearity using vif in the CAR package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvif(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           gender               age      hypertension     heart_disease \n         1.041499          1.213552          1.051213          1.083661 \n     ever_married         work_type    Residence_type avg_glucose_level \n         1.018892          1.051698          1.006965          1.105268 \n              bmi    smoking_status \n         1.117138          1.049260 \n```\n\n\n:::\n:::\n\n\nConclusion. All vif values are below  5 or 10. Ideally most values should be around 1. Range for all the predictors is between: 1.01 - 1.21. Way below the danger threshold of 5 to 10. \n\nConclusion: No Multicollinearity\n\nFinal Conclusion: All 4 assumptions are met, logistic regression is a valid model\n\n\n## 4 Analysis of the Model\n\nPart 4: Analysis of the Model\n\nThere are 2 issues with the model. Fit and Predictive Capability\n\n### 4.1 Use Hosmer-lemesho and Naglekerke R\n\nPart 1  fit. Use Hosmer-lemesho and Naglekerke R for non technical audience\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"ResourceSelection\")\n# library(ResourceSelection)\nhoslem.test(model$y, fitted(model), g = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tHosmer and Lemeshow goodness of fit (GOF) test\n\ndata:  model$y, fitted(model)\nX-squared = 5.2704, df = 8, p-value = 0.7283\n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"rcompanion\")\n# library(rcompanion)\nnagelkerke(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Models\n                                                                                                                                                                               \nModel: \"glm, stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi + smoking_status, binomial, LR_stroke1\"\nNull:  \"glm, stroke ~ 1, binomial, LR_stroke1\"                                                                                                                                 \n\n$Pseudo.R.squared.for.model.vs.null\n                             Pseudo.R.squared\nMcFadden                            0.1838790\nCox and Snell (ML)                  0.0739944\nNagelkerke (Cragg and Uhler)        0.2165560\n\n$Likelihood.ratio.test\n Df.diff LogLik.diff  Chisq    p.value\n     -10     -129.03 258.07 1.0892e-49\n\n$Number.of.observations\n           \nModel: 3357\nNull:  3357\n\n$Messages\n[1] \"Note: For models fit with REML, these statistics are based on refitting with ML\"\n\n$Warnings\n[1] \"None\"\n```\n\n\n:::\n:::\n\n\n### 4.2 Predictive Capability\n\nPart 2 - Predictive Capability\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"pROC\")\n# library(pROC)\nprobs <- predict(model, type = \"response\")\nroc_obj <- roc(LR_stroke1$stroke, probs)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting levels: control = 0, case = 1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting direction: controls < cases\n```\n\n\n:::\n\n```{.r .cell-code}\nauc(roc_obj)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nArea under the curve: 0.8285\n```\n\n\n:::\n:::\n\n\nPredict AUC cross validation\n\n::: {.callout-note}\n## Need to implement AUC cross validation\n\nCould not understand yet how to implement the AUC cross validation\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict AUC cross validation\n# install.packages(\"cvAUC\")\n# library(cvAUC)\n```\n:::\n\n\n\nConfusion Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion Matrix\nLR_stroke1$gender <- factor(LR_stroke1$gender)\nLR_stroke1$hypertension <- factor(LR_stroke1$hypertension)\nLR_stroke1$heart_disease <- factor(LR_stroke1$heart_disease)\nLR_stroke1$ever_married <- factor(LR_stroke1$ever_married)\nLR_stroke1$work_type <- factor(LR_stroke1$work_type)\nLR_stroke1$Residence_type <- factor(LR_stroke1$Residence_type)\nLR_stroke1$smoking_status <- factor(LR_stroke1$smoking_status)\nLR_stroke1$stroke <- factor(LR_stroke1$stroke)\n```\n:::\n\n\nfit logistic regression model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fit logistic regression model\nmodel_CM <- glm(stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi + smoking_status, data=LR_stroke1, family = binomial)\n```\n:::\n\n\nGet Predicted Probabilities for each observation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get Predicted Probabilities for each observation\npred_prob <- predict(model_CM, type = \"response\")\n```\n:::\n\n\n\n**At threshold of around 0.5**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Classify prediction using a threshold (0.5 is common but can adjust)\n# at threshold of 0.5\npred_class <- factor(ifelse(pred_prob > 0.5, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 3176  179\n         1    1    1\n                                          \n               Accuracy : 0.9464          \n                 95% CI : (0.9382, 0.9538)\n    No Information Rate : 0.9464          \n    P-Value [Acc > NIR] : 0.5198          \n                                          \n                  Kappa : 0.0098          \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.0055556       \n            Specificity : 0.9996852       \n         Pos Pred Value : 0.5000000       \n         Neg Pred Value : 0.9466468       \n             Prevalence : 0.0536193       \n         Detection Rate : 0.0002979       \n   Detection Prevalence : 0.0005958       \n      Balanced Accuracy : 0.5026204       \n                                          \n       'Positive' Class : 1               \n                                          \n```\n\n\n:::\n:::\n\n\nIF 1 row is all 0's then model doesn't show any predictability\n\n**At threshold of 0.3**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# at threshold of 0.3\npred_class <- factor(ifelse(pred_prob > 0.3, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 3140  164\n         1   37   16\n                                          \n               Accuracy : 0.9401          \n                 95% CI : (0.9316, 0.9479)\n    No Information Rate : 0.9464          \n    P-Value [Acc > NIR] : 0.9483          \n                                          \n                  Kappa : 0.1158          \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.088889        \n            Specificity : 0.988354        \n         Pos Pred Value : 0.301887        \n         Neg Pred Value : 0.950363        \n             Prevalence : 0.053619        \n         Detection Rate : 0.004766        \n   Detection Prevalence : 0.015788        \n      Balanced Accuracy : 0.538621        \n                                          \n       'Positive' Class : 1               \n                                          \n```\n\n\n:::\n:::\n\n\nIF 1 row is all 0's then model doesn't show any predictability\n\n**At threshold of 0.2**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# at threshold of 0.2\npred_class <- factor(ifelse(pred_prob > 0.2, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 3040  134\n         1  137   46\n                                          \n               Accuracy : 0.9193          \n                 95% CI : (0.9095, 0.9283)\n    No Information Rate : 0.9464          \n    P-Value [Acc > NIR] : 1.0000          \n                                          \n                  Kappa : 0.2108          \n                                          \n Mcnemar's Test P-Value : 0.9033          \n                                          \n            Sensitivity : 0.25556         \n            Specificity : 0.95688         \n         Pos Pred Value : 0.25137         \n         Neg Pred Value : 0.95778         \n             Prevalence : 0.05362         \n         Detection Rate : 0.01370         \n   Detection Prevalence : 0.05451         \n      Balanced Accuracy : 0.60622         \n                                          \n       'Positive' Class : 1               \n                                          \n```\n\n\n:::\n:::\n\n\nIF 1 row is all 0's then model doesn't show any predictability\n\n**At threshold of 0.18**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# At Threshold of 0.18\npred_class <- factor(ifelse(pred_prob > 0.18, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 3003  126\n         1  174   54\n                                          \n               Accuracy : 0.9106          \n                 95% CI : (0.9005, 0.9201)\n    No Information Rate : 0.9464          \n    P-Value [Acc > NIR] : 1.000000        \n                                          \n                  Kappa : 0.2178          \n                                          \n Mcnemar's Test P-Value : 0.006657        \n                                          \n            Sensitivity : 0.30000         \n            Specificity : 0.94523         \n         Pos Pred Value : 0.23684         \n         Neg Pred Value : 0.95973         \n             Prevalence : 0.05362         \n         Detection Rate : 0.01609         \n   Detection Prevalence : 0.06792         \n      Balanced Accuracy : 0.62262         \n                                          \n       'Positive' Class : 1               \n                                          \n```\n\n\n:::\n:::\n\n\n**At threshold of 0.15**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# At threshold of 0.15\npred_class <- factor(ifelse(pred_prob > 0.15, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 2917  102\n         1  260   78\n                                          \n               Accuracy : 0.8922          \n                 95% CI : (0.8812, 0.9025)\n    No Information Rate : 0.9464          \n    P-Value [Acc > NIR] : 1               \n                                          \n                  Kappa : 0.2486          \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.43333         \n            Specificity : 0.91816         \n         Pos Pred Value : 0.23077         \n         Neg Pred Value : 0.96621         \n             Prevalence : 0.05362         \n         Detection Rate : 0.02324         \n   Detection Prevalence : 0.10069         \n      Balanced Accuracy : 0.67575         \n                                          \n       'Positive' Class : 1               \n                                          \n```\n\n\n:::\n:::\n\n\nat threshold of 0.6 that starts the models predictability\n\n**At threshold of 0.1**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# at threshold of 0.1#\npred_class <- factor(ifelse(pred_prob > 0.1, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 2683   69\n         1  494  111\n                                          \n               Accuracy : 0.8323          \n                 95% CI : (0.8192, 0.8448)\n    No Information Rate : 0.9464          \n    P-Value [Acc > NIR] : 1               \n                                          \n                  Kappa : 0.2182          \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.61667         \n            Specificity : 0.84451         \n         Pos Pred Value : 0.18347         \n         Neg Pred Value : 0.97493         \n             Prevalence : 0.05362         \n         Detection Rate : 0.03307         \n   Detection Prevalence : 0.18022         \n      Balanced Accuracy : 0.73059         \n                                          \n       'Positive' Class : 1               \n                                          \n```\n\n\n:::\n:::\n\n\n**At threshold of 0.05**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# at threshold of 0.05#\npred_class <- factor(ifelse(pred_prob > 0.05, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 2256   37\n         1  921  143\n                                         \n               Accuracy : 0.7146         \n                 95% CI : (0.699, 0.7299)\n    No Information Rate : 0.9464         \n    P-Value [Acc > NIR] : 1              \n                                         \n                  Kappa : 0.1521         \n                                         \n Mcnemar's Test P-Value : <2e-16         \n                                         \n            Sensitivity : 0.79444        \n            Specificity : 0.71010        \n         Pos Pred Value : 0.13440        \n         Neg Pred Value : 0.98386        \n             Prevalence : 0.05362        \n         Detection Rate : 0.04260        \n   Detection Prevalence : 0.31695        \n      Balanced Accuracy : 0.75227        \n                                         \n       'Positive' Class : 1              \n                                         \n```\n\n\n:::\n:::\n\n\nGenerate Confusion Matrix comparing model predictions to actual outcome\n\n::: {.callout-important}\n## Confused about this code chunk\n\nThis code serves no purpose at all\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Generate Confusion Matrix comparing model predictions to actual outcome\n# install.packages(\"caret\")\n# library(caret)\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 2256   37\n         1  921  143\n                                         \n               Accuracy : 0.7146         \n                 95% CI : (0.699, 0.7299)\n    No Information Rate : 0.9464         \n    P-Value [Acc > NIR] : 1              \n                                         \n                  Kappa : 0.1521         \n                                         \n Mcnemar's Test P-Value : <2e-16         \n                                         \n            Sensitivity : 0.79444        \n            Specificity : 0.71010        \n         Pos Pred Value : 0.13440        \n         Neg Pred Value : 0.98386        \n             Prevalence : 0.05362        \n         Detection Rate : 0.04260        \n   Detection Prevalence : 0.31695        \n      Balanced Accuracy : 0.75227        \n                                         \n       'Positive' Class : 1              \n                                         \n```\n\n\n:::\n:::\n\n\n::: {.callout-important}\n## Error\n\nError: `data` and `reference` should be factors with the same levels.\n\n:::\n\n```{{r}}\nconf_matrix <- confusionMatrix(pred_class, LR_stroke1, positive = \"1\")\nprint(conf_matrix)\n```\n\nError: `data` and `reference` should be factors with the same levels.\n\nSuppose you have your folds and predictions for each fold\n\n```{{r}}\n# Suppose you have your folds and predictions for each fold\n# Error: object 'folds' not found\ncvAUC::cvAUC(predictions, labels, folds = folds)\n```\n\n::: {.callout-important}\n## Error\n\nError: object 'folds' not found\n\n:::\n\n\n\n\n## Original Code\n\nBelow we see the Original Code shared by Steve: **Stroke_Results_1019_2025_latest_440PM_SW_For_Group.R**\n\n```{{r}}\ninstall.packages(\"dplyr\")\ninstall.packages(\"car\")\ninstall.packages(\"ResourceSelection\")\nlibrary(dplyr)\nlibrary(car)\nlibrary(ResourceSelection)\nstroke1 <- read.csv(\"D:\\\\stroke.csv\")\nhead(stroke1)\nnrow(stroke1)\nsummary(stroke1)\ncount_tables <- lapply(stroke1, table)\ncount_tables\n#-------------------------------------------Part 1:  preparing the data---------------------------------#\n# Smoking Status - remove unknown#\n#bmi - remove N/A#\n# Work type - remove children#\n# age create numerical variable with 2 places after the decimal#\n#gender -remove other#\nstroke1[stroke1 == \"N/A\"] <- NA\nstroke1[stroke1 == \"Unknown\"] <- NA\nstroke1[stroke1 == \"children\"] <- NA\nstroke1[stroke1 == \"other\"] <- NA\nstroke1$bmi <- round(as.numeric(stroke1$bmi), 2)\nstroke1$gender[stroke1$gender == \"Male\"] <- 1\nstroke1$gender[stroke1$gender == \"Female\"] <- 2\nstroke1$gender <- as.numeric(stroke1$gender)\nstroke1$ever_married[stroke1$ever_married == \"Yes\"] <- 1\nstroke1$ever_married[stroke1$ever_married == \"No\"] <- 2\nstroke1$ever_married <- as.numeric(stroke1$ever_married)\nstroke1$work_type[stroke1$work_type == \"Govt_job\"] <- 1\nstroke1$work_type[stroke1$work_type == \"Private\"] <- 2\nstroke1$work_type[stroke1$work_type == \"Self-employed\"] <- 3\nstroke1$work_type[stroke1$work_type == \"Never_worked\"] <- 4\nstroke1$work_type <- as.numeric(stroke1$work_type)\nstroke1$Residence_type[stroke1$Residence_type == \"Urban\"] <- 1\nstroke1$Residence_type[stroke1$Residence_type == \"Rural\"] <- 2\nstroke1$Residence_type <- as.numeric(stroke1$Residence_type)\nstroke1$avg_glucose_level <- as.numeric(stroke1$avg_glucose_level)\nstroke1$heart_disease <- as.numeric(stroke1$heart_disease)\nstroke1$hypertension <- as.numeric(stroke1$hypertension)\nstroke1$age <- round(as.numeric(stroke1$age), 2)\nstroke1$stroke <- as.numeric(stroke1$stroke)\nstroke1$smoking_status[stroke1$smoking_status == \"never smoked\"] <- 1\nstroke1$smoking_status[stroke1$smoking_status == \"formerly smoked\"] <- 2\nstroke1$smoking_status[stroke1$smoking_status == \"smokes\"] <- 3\nstroke1$smoking_status <- as.numeric(stroke1$smoking_status)\nstroke1 <- stroke1[, !(names(stroke1) %in% \"id\")]\nstroke1_clean <- na.omit(stroke1)\n#converted all columns to numeric and removed id#\nstr(stroke1_clean)\nnrow(stroke1_clean)\nLR_stroke1 <- stroke1_clean\nstr(LR_stroke1)\n#-------------------------Part 2:Create and Run the Logistic Regression model from the  dataset-------------#\nmodel <- glm(stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi + smoking_status, data=LR_stroke1, family = binomial)\nsummary(model)\n# ----------------------------------Part 3: Testing logistic Regression Model Assumptions------------------------#\n# There are several assumptions for Logistic Regression#\n# They are:#\n#(1) The Dependent Variable is binary (i.e, 0 or 1)#\n#(2) There is a linear relationship between th logit of the outcome and each predictor#\n#(3) There are NO high leverage outliers in the predictors#\n#(4) There is No high multicollinearity (ie strong correlations) between predictors#\n####################################:Now to test each assumption: ################\n# Testing Assumption 1: The Dependent Variable is binary (0 or 1)#\nunique(LR_stroke1$stroke)\n#Testing Assumption 2: There is a linear relationship between the outcome variable and each predictor\n#first,  adjust all predictors so all values are positive#\nLR_stroke1$genderadj <- LR_stroke1$gender + abs(min(LR_stroke1$gender)) + 1\nLR_stroke1$ageadj <- LR_stroke1$age + abs(min(LR_stroke1$age)) + 1\nLR_stroke1$hypertensionadj <- LR_stroke1$hypertension + abs(min(LR_stroke1$hypertension)) + 1\nLR_stroke1$heart_diseaseadj <- LR_stroke1$heart_disease + abs(min(LR_stroke1$hypertension)) + 1\nLR_stroke1$ever_marriedadj <- LR_stroke1$ever_married + abs(min(LR_stroke1$ever_married)) + 1\nLR_stroke1$work_typeadj <- LR_stroke1$work_type + abs(min(LR_stroke1$work_type)) + 1\nLR_stroke1$Residence_typeadj <- LR_stroke1$Residence_type + abs(min(LR_stroke1$Residence_type)) + 1\nLR_stroke1$avg_glucose_leveladj <- LR_stroke1$avg_glucose_level + abs(min(LR_stroke1$avg_glucose_level)) + 1\nLR_stroke1$bmiadj <- LR_stroke1$bmi + abs(min(LR_stroke1$bmi)) + 1\nLR_stroke1$smoking_statusadj <- LR_stroke1$smoking_status + abs(min(LR_stroke1$smoking_status)) + 1\nstr(LR_stroke1)\nStrokeAdj <- LR_stroke1\nStrokeAdj <- StrokeAdj[ , !(names(StrokeAdj) %in% c(\"gender\", \"age\", \"hypertension\", \"heart_disease\", \"ever_married\", \"work_type\", \"Residence_type\", \"avg_glucose_level\", \"bmi\", \"smoking_status\")) ]\nmod.2 <- glm(stroke ~ genderadj + ageadj + hypertensionadj + heart_diseaseadj + ever_marriedadj + work_typeadj + Residence_typeadj + avg_glucose_leveladj + bmiadj + smoking_statusadj, data=StrokeAdj, family=binomial)\nresidualPlots(mod.2)\n# Conclusion: For all continuous variables , ageadj, avg_glucose_leveladj, and bniadj, the residual plots show linearity#\n# Conclusion:all the other predictors are categorical, with the magenta line flat, and the values clustering around certain values, they are also appropriate for logistic regression#\n# ---------------------------------------Conclusion for assumption 2 - Linearity is met--------------------------------#\n# Testing Assumption 3: assess influential outliers using car package and influencePlot#\nalias(Stroke.2)\ninstall.packages(\"Hmisc\")\nlibrary(Hmisc)\nrcorr(as.matrix(LR_stroke1))\ninfluencePlot(model)\n# Cooks D ranges from 0 to .0122 While the ideal size is 4/N (4/3357 = 0.012), its far outside the danger zone of .5\n#--------------------------------- Conclusion: Assumption 3 is met - No substantial outliers---------------------#\n# Testing Assumption 4 : Multicollinearity using vif in the care package#\nvif(model)\n#--------------------Conclusion. All vif values are below  5 or 10. Ideally most values should be around 1. Range for all#\n# the predictors is between: 1.01 - 1.21. Way below the danger threshold of 5 to 10. Conclusion: No Multicollinearity####\n#####################################################################################################################\n# -----------------Final Conclusion: All4 assumptions are met, logistic regression is a valid model---------------#\n####################################################################################################################\n# ---------------------------------------------Part 4: Analysis of the Model----------------------------------------#\n# -----------------------There are 2 issues with the model. Fit and Predictive Capability---------------------------#\n# ----------------Part 1  fit. Use Hosmer-lemesho and Naglekerke R for non technical audience-------------------#\nhoslem.test(model$y, fitted(model), g = 10)\ninstall.packages(\"rcompanion\")\nlibrary(rcompanion)\nnagelkerke(model)\n# -----------------------Part 2 - Predictive Capability-----------------------------------------------------------\ninstall.packages(\"pROC\")\nlibrary(pROC)\nprobs <- predict(model, type = \"response\")\nroc_obj <- roc(LR_stroke1$stroke, probs)\nauc(roc_obj)\n# Predictict AUC cross validation\ninstall.packages(\"cvAUC\")\nlibrary(cvAUC)\n# Confusion Matrix\nLR_stroke1$gender <- factor(LR_stroke1$gender)\nLR_stroke1$hypertension <- factor(LR_stroke1$hypertension)\nLR_stroke1$heart_disease <- factor(LR_stroke1$heart_disease)\nLR_stroke1$ever_married <- factor(LR_stroke1$ever_married)\nLR_stroke1$work_type <- factor(LR_stroke1$work_type)\nLR_stroke1$Residence_type <- factor(LR_stroke1$Residence_type)\nLR_stroke1$smoking_status <- factor(LR_stroke1$smoking_status)\nLR_stroke1$stroke <- factor(LR_stroke1$stroke)\n# fit logistic regression model\nmodel_CM <- glm(stroke ~ gender + age + hypertension + heart_disease + ever_married + work_type + Residence_type + avg_glucose_level + bmi + smoking_status, data=LR_stroke1, family = binomial)\n# Get Predicted Probabilities for each observation\npred_prob <- predict(model_CM, type = \"response\")\ninstall.packages(\"caret\")\nlibrary(caret)\n#Classify prediction using a threshold (0.5 is common but can adjust)\n# art threshold of 0.5#\npred_class <- factor(ifelse(pred_prob > 0.5, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n# at threshold of 0.3#\npred_class <- factor(ifelse(pred_prob > 0.3, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n# at threshold of 0.2\npred_class <- factor(ifelse(pred_prob > 0.2, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n# At Threshold of 0.18#\npred_class <- factor(ifelse(pred_prob > 0.18, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n# At threshold of 0.15#\npred_class <- factor(ifelse(pred_prob > 0.15, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n\n# at threshold of 0.1#\npred_class <- factor(ifelse(pred_prob > 0.1, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n# at threshold of 0.05#\npred_class <- factor(ifelse(pred_prob > 0.05, 1, 0), levels = c(0, 1))\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n\n\n\n#Generate Confusion Matrix comparing model predictions to actual outcome\ninstall.packages(\"caret\")\nlibrary(caret)\nconf_matrix <- confusionMatrix(pred_class, factor(LR_stroke1$stroke, levels = c(\"0\", \"1\")), positive = \"1\")\nprint(conf_matrix)\n\n\n\n\n\n\nconf_matrix <- confusionMatrix(pred_class, LR_stroke1, positive = \"1\")\nprint(conf_matrix)\n\n\n\n\n# Suppose you have your folds and predictions for each fold\ncvAUC::cvAUC(predictions, labels, folds = folds)\n\n```\n\n### References\n\n::: {#refs}\n:::",
    "supporting": [
      "Stroke_Results_10182025_SW_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}